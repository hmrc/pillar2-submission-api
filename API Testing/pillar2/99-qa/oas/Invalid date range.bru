meta {
  name: Invalid date range
  type: http
  seq: 4
}

get {
  url: {{pillar2Url}}/obligations-and-submissions/2024-01-01/2023-12-31
  body: none
  auth: none
}

params:query {
  fromDate: 2024-01-01
  toDate: 2023-12-31
}

headers {
  Authorization: {{bearer_token}}
  X-Pillar2-Id: {{testPlrId}}
}

tests {
  test("should return 422 for invalid date format", function() {
    expect(res.status).to.equal(422);
  });
  
  test("should contain error about invalid date format", function() {
    expect(res.body).to.not.be.undefined;
    expect(res.body.code).to.equal("003");
    expect(res.body.message).to.equal("Request could not be processed");
  });
}
